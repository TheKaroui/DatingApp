Module 6: 3rd party libraries

-alertifyJS: .com : alerts and popups management
modify in angular.json (then its available globally ) to add scripts then modify styles.css to add styles of this lib

-angular JWT


-ngx bootstrap: instead of bootstrap js because it relays on jquery
- bootswatch : theming


module 7:
-setting up routing:
    wildcard route has important order in routing list
    modify in html "href"s with "a-routerLink"
    Using "routerLinkActive": put in .html in ddl li item active by routerLinkActive in every "li"
    replace in "appCompHtml" replace "<app-home>" with "router-outlet" wich will add 
    message works in page when clicking on Link

    Using "routing rules" when i click i want to go to ... in code: possible via "angular/router"
    via this.router.navigate(['/link'])

-protecting the routes (event. multiple routes at once) via routeGuard
    when user types url to page wich is protected bu auth he should be redirected to home
    this is done via route routeGuard

module 8:
- seeding app with jsonGenerator for models
json jsonGenerator to seed data
removing referenceloop from json errors
adding dtos
adding automapper (...injectiondependencies) 4.0.1
Using AutoMapper
Configuring automapper

module 9: angular
- types of typeScript => transpiled into javascript (interfaces does not end up in our javascript code)
- retrieving data from api services
- using bootstrap to create membercads
- adding detailed view of users
- adding photo gallery
- @auth0/angular-jwt Auth0 jwt token management via JwtModule.forRoot in imports in appmodule.ts and remove the httpOption from userService.ts
- +this.route.snapshot.params['id'] gets the users/id gets the ID by injecting route: ActivatedRoot
    since we need to retrieve it as number we put the + : +this.route.snapshot.params['id']
- after we create new compononent we need to create new route the way we can access that component via url
- [routerLink]="['/members/', user.id]" serves for click link role.
- route resolvers: retrieve data before acessing route. its used to make us not necessarely using safe navigation operators "?"
- safe navigation operator: adding ? on nullable properties the way we don't get errors in cosole for that anymore

module 10:
as using canActivate to see if we can use some routes in authGuard.ts
using routeGuards to prevent user to change view and loosing all data: implements CanDeactivate<MemberEditComponent>
preventing user from closing browser by error: angular has no control beyond routes and what relates to routes so this is
why we user hostListnersDecorator to listen to our browser.
